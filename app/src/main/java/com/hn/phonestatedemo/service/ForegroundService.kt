package com.hn.phonestatedemo.service

import android.app.*
import android.content.Intent
import android.os.Binder
import android.os.IBinder
import android.util.Log
import androidx.lifecycle.MutableLiveData
import com.google.firebase.FirebaseApp
import com.hn.phonestatedemo.receiver.CallLogInfo
import com.hn.phonestatedemo.receiver.CallLogUtils
import com.hn.phonestatedemo.utils.FirebaseUtil
import java.util.*


class ForegroundService : Service() {

    companion object
    {
        public var serviceStared : Boolean = false
    }
    // Binder given to clients (notice class declaration below)
    private val mBinder: IBinder = MyBinder()

    // Random number generator
    private val mGenerator: Random = Random()

    // LiveData for capturing random number generated by the service
    val userCallLog: MutableLiveData<List<CallLogInfo>> = MutableLiveData()

    // Channel ID for notification
    val CHANNEL_ID = "Random number notification"

    /**
     * Class used for the client Binder. The Binder object is responsible for returning an instance
     * of "MyService" to the client.
     */
    inner class MyBinder : Binder() {
        // Return this instance of MyService so clients can call public methods
        val service: ForegroundService
            get() =// Return this instance of MyService so clients can call public methods
                this@ForegroundService
    }

    /**
     * This is how the client gets the IBinder object from the service. It's retrieve by the "ServiceConnection"
     * which you'll see later.
     */
    override fun onBind(intent: Intent): IBinder? {
        return mBinder
    }

    /**
     * Called when service is created So  we will do our work here
     */
    override fun onCreate() {
        super.onCreate()
        serviceStared  = true;
        CallLogUtils.context  = baseContext
        Log.d("MyBoundService", "onCreate called")
        FirebaseApp.initializeApp(this)
        FirebaseUtil.getCallLog(userCallLog)

    }

    override fun  onStartCommand(intent: Intent, flags : Int, startId: Int):Int {

        //FirebaseUtil.addUserInfoLogTest()
        val callLog  = CallLogUtils.getInstance()!!.loadData();
        if(callLog != null) {
            println("data found")
            FirebaseUtil.addUserInfoLog(callLog,userCallLog)
        }
        else
        {
            println("data null")
        }
        return START_NOT_STICKY;

    }

    override fun onDestroy() {
        serviceStared  = false
        super.onDestroy()
    }

}